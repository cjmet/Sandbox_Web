/* CSS for the fixed navigation bar */

/* 
  To-Do:
    * Collapse the header as we scroll?
    * Container Query
    * --grid-item-tmp: calc(100% / var(--grid-item-avg-width));
    * #include file="main.shtml"

  Questions: 
    * ... 

*/

/* this is what makes it fill the viewport */
/* this was ommitted from the discussion, demos, and sample files */
html,
body {
  height: 100%;
  margin: 0;
}

body {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: min-content 1fr auto;
  grid-template-areas:
    "header header"
    "nav main"
    "footer footer";
}

.DocumentHeader {
  grid-area: header;
  border: 3px solid purple;
  position: sticky;
  top: 0;
  background-color: #333;
  color: white;
  padding: 0.5em;
  text-align: left;
  overflow: hidden;
  z-index: 1000;
}

.DocumentHeader a {
  color: white;
  margin-left: 1em;
  text-decoration: none;
}

.MainNavLeft {
  grid-area: nav;
  border: 3px solid blue;
  background-color: #666;
  color: white;
  padding: 0.5em;
  margin: 0;
  text-align: left;
  text-wrap: nowrap;
  /* overflow: hidden;  */
}

.MainNavLeft > h1,
.MainNavLeft > h2,
.MainNavLeft > h3,
.MainNavLeft > h4,
.MainNavLeft > h5,
.MainNavLeft > h6 {
  margin: 0.5em 0.1em;
}

.MainNavLeft a {
  display: block;
  color: white;
  padding: 0 0.5em 0.25em 1em;
  text-decoration: none;
}

/* ================================================ */
/* Main =========================================== */
main {
  grid-area: "main";
  border: 5px solid green;
  background-color: #c0ebc0;
  margin: 0;
  padding: 0;

  display: flex;
  flex-direction: column;
}

.MainDataTitle {
  margin: 5px;
  border: 3px solid black;
  background-color: wheat;
  text-align: center;
}

.MainDataArticles {
  flex-grow: 1;
  margin: 5px;
  border: 3px solid lightcoral;
  background-color: lightgray;

  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));

  /* ===============================================  */
  /* Mathemanai - average width of grid items */

  /* --grid-item-avg-width: 300px; 
  --grid-item-container-width: 100%;
  --grid-item-tmp: calc(var(--grid-item-container-width) / var(--grid-item-avg-width));
  --grid-item-num: calc(100% / var(--grid-item-tmp));
  grid-template-columns: repeat(auto-fit, minmax(var(--grid-item-num), 1fr)); */

  /* /Mathemanai ==================================== */
  /* ===============================================  */

  /* Flexbox option.  This option is working how I intended. */
  /* display: flex;
  flex-flow: row wrap; */

  /* overflow: auto; */
}

article {
  flex-grow: 1; /* for the flexbox option */
  border: 1px solid black;
  background-color: lightskyblue;
  margin: 0.5em;
  padding: 0.5em;
}
/* /Main =========================================== */
/* ===============================================  */

/* ================================================ */
/* Math =========================================== */

@property --100vw {
  syntax: "<length>";
  initial-value: 0px;
  inherits: false;
}

#MathTarget::before {
    --math: tan(atan2(12s /10 + 3ms, 1ms));
    --100vw: 100vw;
    --pixie: tan(atan2(var(--100vw), 1px));
    counter-reset: math var(--math) pixie var(--pixie);

    content: "Numeric value is: " counter(math) " <small>(ms)</small> - " counter(pixie) " (px)";
    /* counter should print 1203 */
    /* counter is severely limited in it's ability to print numbers */
    /* 12003 fails while 1203 does not. */
  }

/* /Math =========================================== */
/* ===============================================  */





/* ===============================================  */
/* Container Queries ============================== */

/* container-type: interacts with grid and flex sizes and alignments */
/* article {
  container-type: inline-size;
  container-name: article-container;
} */

#ContainerQuery {
  container: article-container / inline-size;
}

@container article-container (min-width: 250px) {
  article h3 {
    font-size: x-small;
    color: magenta;
  }
}

@container article-container (min-width: 300px) {
  article h3 {
    font-size: small;
    color: red;
  }
}

@container article-container (min-width: 350px) {
  article h3 {
    font-size: medium;
    color: darkgreen;
  }
}

@container article-container (min-width: 400px) {
  article h3 {
    font-size: large;
    color: blue;
  }
}

@container article-container (min-width: 450px) {
  article h3 {
    font-size: x-large;
    color: purple;
  }
}

@container article-container (min-width: 500px) {
  article h3 {
    font-size: xx-large;
    color: black;
  }
}

@container article-container (min-width: 550px) {
  article h3 {
    font-size: xxx-large;
    color: white;
  }
}

/* /Container Queries ============================== */
/* ===============================================  */

footer {
  grid-area: footer;
  border: 3px solid purple;
  background-color: #333;
  color: white;
  text-align: right;
}

footer > p {
  margin: 0;
  padding: 0.1em 0.5em;
  font-size: small;
}

.HeaderWithDescription {
  margin-bottom: 0.1em;
}

.HeaderDescription {
  margin-top: 0.1em;
  font-size: small;
}
